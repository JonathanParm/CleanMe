@using CleanMe.Application.ViewModels
@using CleanMe.Domain.Enums
@using CleanMe.Shared.Helpers

@model CleanMe.Application.ViewModels.AmendmentAddEditViewModel

@{
    ViewData["Title"] = Model.IsEdit ? "Edit Amendment" : "Add Amendment";
}

<h2>@ViewData["Title"]</h2>

<form asp-action="AddEdit" asp-controller="Amendment" method="post" id="AmendmentForm" novalidate>

    @Html.AntiForgeryToken()

    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    @Html.HiddenFor(m => m.amendmentId)

    @Html.HiddenFor(m => m.AmendmentLastInvoiced.amendmentId)
    @Html.HiddenFor(m => m.AmendmentLastInvoiced.clientId)
    @Html.HiddenFor(m => m.AmendmentLastInvoiced.areaId)
    @Html.HiddenFor(m => m.AmendmentLastInvoiced.assetLocationId)
    @Html.HiddenFor(m => m.AmendmentLastInvoiced.itemCodeId)
    @Html.HiddenFor(m => m.AmendmentLastInvoiced.assetId)
    @Html.HiddenFor(m => m.AmendmentLastInvoiced.amendmentTypeId)
    @Html.HiddenFor(m => m.AmendmentLastInvoiced.CleanFrequencyName)
    @Html.HiddenFor(m => m.AmendmentLastInvoiced.StaffName)
    @Html.HiddenFor(m => m.AmendmentLastInvoiced.Rate)
    @Html.HiddenFor(m => m.AmendmentLastInvoiced.IsAccessable)
    @Html.HiddenFor(m => m.AmendmentLastInvoiced.StartOn)
    @Html.HiddenFor(m => m.AmendmentLastInvoiced.FinishOn)
    @Html.HiddenFor(m => m.AmendmentLastInvoiced.Comment)

    @if (!Model.IsEdit)
    {
        <div class="form-group" data-field="amendmentTypeId">
            @Html.LabeledDropDownFor(model => Model.AmendmentCurrent.amendmentTypeId, Model.AmendmentTypes)
        </div>
        <div class="form-group" data-field="clientId">
            @Html.LabeledDropDownFor(model => Model.AmendmentCurrent.clientId, Model.Clients)
        </div>
        <div class="form-group" data-field="areaId">
            @Html.LabeledDropDownFor(model => Model.AmendmentCurrent.areaId, Model.Areas)
        </div>
        <div class="form-group" data-field="assetLocationId">
            @Html.LabeledDropDownFor(model => Model.AmendmentCurrent.assetLocationId, Model.AssetLocations)
        </div>
        <div class="form-group" data-field="itemCodeId">
            @Html.LabeledDropDownFor(model => Model.AmendmentCurrent.itemCodeId, Model.ItemCodes)
        </div>
        <div class="form-group" data-field="assetId">
            @Html.LabeledDropDownFor(model => Model.AmendmentCurrent.assetId, Model.Assets)
        </div>
    }
    else
    {
        <!-- Read-only Labels (Edit mode) -->
        @Html.HiddenFor(m => m.AmendmentCurrent.amendmentId)
        @Html.HiddenFor(m => m.AmendmentCurrent.clientId)
        @Html.HiddenFor(m => m.AmendmentCurrent.areaId)
        @Html.HiddenFor(m => m.AmendmentCurrent.assetLocationId)
        @Html.HiddenFor(m => m.AmendmentCurrent.itemCodeId)
        @Html.HiddenFor(m => m.AmendmentCurrent.assetId)
        @Html.HiddenFor(m => m.AmendmentCurrent.amendmentTypeId)

        <div class="form-group">
            <label>Amendment type</label>
            <p class="form-control-static">@Model.AmendmentCurrent.AmendmentTypeName</p>
        </div>
        <div class="form-group" data-field="clientId" ">
            <label>Client</label>
            <p class="form-control-static">@Model.AmendmentCurrent.ClientName</p>
        </div>
        <div class="form-group" data-field="areaId" ">
            <label>Area</label>
            <p class="form-control-static">@Model.AmendmentCurrent.AreaName</p>
        </div>
        <div class="form-group" data-field="assetLocationId">
            <label>Asset location</label>
            <p class="form-control-static">@Model.AmendmentCurrent.AssetLocationName</p>
        </div>
        <div class="form-group" data-field="itemCodeId">
            <label>Item code</label>
            <p class="form-control-static">@Model.AmendmentCurrent.ItemCodeName</p>
        </div>
        <div class="form-group" data-field="assetId">
            <label>Asset</label>
            <p class="form-control-static">@Model.AmendmentCurrent.AssetName</p>
        </div>
    }

    <h5 class="mt-4">Amendment Details</h5>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th></th>
                <th>Invoiced @(Model.AmendmentLastInvoiced.StartOn?.ToString("d MMM yyyy") ?? "")</th>
                <th>Current Amendment</th>
            </tr>
        </thead>
        <tbody>
            <tr data-field="cleanFrequencyId">
                <td>Cleaning Frequency</td>
                <td>@Model.AmendmentLastInvoiced.CleanFrequencyName</td>
                <td>
                    @Html.LabeledDropDownFor(model => model.AmendmentCurrent.cleanFrequencyId, Model.CleanFrequencies)
                </td>
            </tr>
            <tr data-field="staffId">
                <td>Cleaner</td>
                <td>@Model.AmendmentLastInvoiced.StaffName</td>
                <td>
                    @Html.LabeledDropDownFor(model => model.AmendmentCurrent.staffId, Model.Staff)
                </td>
            </tr>
            <tr data-field="rate">
                <td>Rate</td>
                <td>@(Model.AmendmentLastInvoiced.Rate?.ToString("C"))</td>
                <td>
                    @Html.LabeledTextBoxFor(model => model.AmendmentCurrent.Rate)
                </td>
            </tr>
            <tr data-field="isAccessable">
                <td>Is Accessable</td>
                <td>@(Model.AmendmentLastInvoiced.IsAccessable ? "Yes" : "No")</td>
                <td>
                    @Html.YesNoButtonsFor(model => model.AmendmentCurrent.IsAccessable)
                </td>
            </tr>
            <tr>
                <td>Start Date</td>
                <td>@(Model.AmendmentLastInvoiced.StartOn?.ToString("d MMM yyyy") ?? "")</td>
                <td>
                    @Html.LabeledTextBoxFor(model => model.AmendmentCurrent.StartOn)
                </td>
            </tr>
            <tr>
                <td>Finish Date</td>
                <td>@(Model.AmendmentLastInvoiced.FinishOn?.ToString("d MMM yyyy") ?? "")</td>
                <td>
                    @Html.LabeledTextBoxFor(model => model.AmendmentCurrent.FinishOn)
                </td>
            </tr>
            <tr>
                <td>Comment</td>
                <td>@(Model.AmendmentLastInvoiced.Comment)</td>
                <td>
                    @Html.LabeledTextAreaFor(model => model.AmendmentCurrent.Comment)
                </td>
            </tr>
        </tbody>
    </table>

    <button type="submit" class="btn btn-primary">Save</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    <script src="@Url.Content("~/js/amendment/addeddit-amendmenttype-hasfield-visible.js")"></script>
    <script src="@Url.Content("~/js/amendment/addedit-cascade-select.js")"></script>
}