@model CleanMe.Application.ViewModels.ChangePasswordViewModel

<p style="color:red;">[DEBUG] Password Partial View Loaded</p>

<input type="hidden" name="ChangePassword.UserId" value="@Model.UserId" />

<div class="mb-3">
    <label asp-for="Password" class="form-label">New Password</label>
    <input asp-for="Password" class="form-control" type="password" />
    <span asp-validation-for="Password" class="text-danger"></span>
</div>

    <div class="progress mt-2">
        <div id="passwordStrengthBar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuemin="0" aria-valuemax="100"></div>
    </div>
    <small id="passwordStrengthText"></small>

<div class="mb-3">
    <label asp-for="ConfirmPassword" class="form-label">Confirm Password</label>
    <input asp-for="ConfirmPassword" class="form-control" type="password" />
    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
</div>

<script>
    document.getElementById("password").addEventListener("input", function () {
        let password = this.value;
        let strengthBar = document.getElementById("passwordStrengthBar");
        let strengthText = document.getElementById("passwordStrengthText");

        let strength = 0;
        if (password.length >= 8) strength += 1; // Length Check
        if (/[A-Z]/.test(password)) strength += 1; // Uppercase Letter
        if (/[a-z]/.test(password)) strength += 1; // Lowercase Letter
        if (/\d/.test(password)) strength += 1; // Number
        if (/[\W]/.test(password)) strength += 1; // Special Character

        let width = (strength / 5) * 100;
        strengthBar.style.width = width + "%";

        if (strength <= 2) {
            strengthBar.classList.add("bg-danger");
            strengthBar.classList.remove("bg-warning", "bg-success");
            strengthText.textContent = "Weak";
        } else if (strength <= 4) {
            strengthBar.classList.add("bg-warning");
            strengthBar.classList.remove("bg-danger", "bg-success");
            strengthText.textContent = "Medium";
        } else {
            strengthBar.classList.add("bg-success");
            strengthBar.classList.remove("bg-danger", "bg-warning");
            strengthText.textContent = "Strong";
        }
    });

    document.addEventListener("DOMContentLoaded", function () {
        const passwordInput = document.querySelector('[name="ChangePassword.Password"]');
        const confirmPasswordInput = document.querySelector('[name="ChangePassword.ConfirmPassword"]');

        if (passwordInput && confirmPasswordInput) {
            confirmPasswordInput.addEventListener("input", function () {
                const mismatch = passwordInput.value !== confirmPasswordInput.value;
                confirmPasswordInput.setCustomValidity(mismatch ? "Passwords do not match." : "");
            });
        }
    });

    // document.getElementById("confirmPassword").addEventListener("input", function () {
    //     let password = document.getElementById("password").value;
    //     let confirmPassword = this.value;

    //     if (password !== confirmPassword) {
    //         document.getElementById("passwordMismatch").style.display = "block";
    //     } else {
    //         document.getElementById("passwordMismatch").style.display = "none";
    //     }
    // });
</script>
